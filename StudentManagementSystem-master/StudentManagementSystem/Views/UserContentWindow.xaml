<Window x:Class="StudentManagementSystem.Views.UserContentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StudentManagementSystem.Views"
         xmlns:vm="clr-namespace:StudentManagementSystem.ViewModels"
        mc:Ignorable="d"
        Title="UserContentWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="rediusbutton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:UserContentWindowVM/>

    </Window.DataContext>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Images/background.jpg"/>
        </Grid.Background>
        <StackPanel >
        <TextBlock VerticalAlignment="Center" TextAlignment="Center"  Height="50" HorizontalAlignment="Center" FontSize="20" Text="User Content Window" Foreground="White" Margin="0,1,0,0">
            
        </TextBlock>
        </StackPanel>
        <StackPanel>
        <ListView SelectedItem="{Binding Selectedstudents}" ItemsSource="{Binding Students}" Foreground="#ffffff" Margin="5,52,5,0" Height=" 250 " VerticalAlignment="Top"  >
            <ListView.Background>
                <SolidColorBrush Color="White" Opacity="0"/>
            </ListView.Background>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header=" clear" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Id"  Width="70" DisplayMemberBinding="{Binding StudentId ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                    <GridViewColumn Header="First Name" Width="130" DisplayMemberBinding="{Binding FirstNamE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay }"/>
                    <GridViewColumn Header="Last Name" Width="130" DisplayMemberBinding="{Binding LastNamE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                    <GridViewColumn Header="Address" Width="300" DisplayMemberBinding="{Binding AdresS,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                    <GridViewColumn Header="Tele No." Width="165" DisplayMemberBinding="{Binding PhoneNumbeR,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

                </GridView>
            </ListView.View>
        </ListView>
        </StackPanel>



        <Button Style="{DynamicResource rediusbutton}" 
            Command="{Binding UpdatesStudentCommand}"
             Content="Update" 
             Foreground="White"
             Margin="-570,300,0,25"
             Height="66"
             Width="150"
     
     
             >
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Button.Background>
        </Button>
        <Button 
             Content="New Student"  Style="{DynamicResource rediusbutton}" 
             Foreground="White"
             
             Height="66"
             Width="150"
            Command="{Binding AddStudentsCommand}" Margin="-190,276,0,0"
     
             >
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Button.Background>
        </Button>

        <Button 
            
             Content="Results" Style="{DynamicResource rediusbutton}" 
             Foreground="White"
             Margin="499,301,-71,25"
             Height="66"
             Width="150" Click="Button_Click"
          
             >
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Button.Background>
        </Button>
        <Button 
            Command="{Binding RemovesStudentCommand}" Style="{DynamicResource rediusbutton}" 
                 Content="Delete"
                 Foreground="White"
                 Margin="0,302,-190,25"
                 Height="66"
                 Width="150" >
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Button.Background>
        </Button>


    </Grid>
</Window>
