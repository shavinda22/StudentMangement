<Window x:Class="StudentManagementSystem.Views.AdmincontentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StudentManagementSystem.Views"
        xmlns:vm="clr-namespace:StudentManagementSystem.ViewModels"
        mc:Ignorable="d"
        Title="AdmincontentWindow" Height="675" Width="1200" Foreground="White">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RadiusButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/Images/background.jpg"/>
    </Window.Background>
    <Window.DataContext>
        <vm:AdminContentWindowVM/>
    </Window.DataContext>
    <Grid Margin="5,0,5,-3" >
        <Grid.RowDefinitions>
            <RowDefinition Height="0.2*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>


        <Grid Grid.Row="0">

            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0"/>
            </Grid.Background>
            <TextBlock Text="ADMIN WINDOW (Users and Students Registration)" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30"/>
            <Border CornerRadius="25" Margin="100,15,100,15">

                <Border.Background>
                        <SolidColorBrush Color="White" Opacity="0.2"/>
                    </Border.Background>
                
            </Border>
        </Grid>


        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width=" 20"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="300"/>
                    <RowDefinition/>

                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <TextBlock Text="USERS" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30"/>

                </Grid>
                <Grid Grid.Row="1">
                    <ListView SelectedItem="{Binding Selecteduser}" ItemsSource="{Binding Users}" Foreground="#FFFDFDFD">
                        <ListView.Background>
                            <SolidColorBrush Color="White" Opacity="0"/>
                        </ListView.Background>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Clear"/>
                            </ContextMenu>

                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="User Id" Width="80" DisplayMemberBinding="{Binding Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="First Name" Width="120" DisplayMemberBinding="{Binding FirstName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="Last Name" Width="120" DisplayMemberBinding="{Binding LastName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="User Name" Width="160" DisplayMemberBinding="{Binding UserName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="Email" DisplayMemberBinding="{Binding Email,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
                <Grid Grid.Row="2">
                    <Border CornerRadius="25" Margin="10,30,10,30">

                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.2"/>
                        </Border.Background>

                    </Border>
                    <Button Content="Add User"  Style="{DynamicResource RadiusButton}"
                        Foreground="White"
                        Background="Black"
                        Height="35"
                        Width="100" Margin="-342,0,0,0" Command="{Binding AddUserCommand}">
                    </Button>
                    <Button Content="Update" Style="{DynamicResource RadiusButton}"
                        Foreground="White"
                        Background="Black"
                        Height="35"
                        Width="100"
                            Command="{Binding UpdateUserCommand}"/>

                    <Button Content="Delete" Style="{DynamicResource RadiusButton}"
                         Foreground="White"
                         Background="Black"
                         Height="35"
                         Width="100" 
                            Command="{Binding RemoveUserCommand}" Margin="340,0,0,0"></Button>
                    
                    
                    
                </Grid>
                

            </Grid>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="300"/>
                    <RowDefinition/>

                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <TextBlock Text="STUDENTS" VerticalAlignment="Center"  HorizontalAlignment="Center" FontSize="30"/>
                    <Button Style="{DynamicResource RadiusButton}" Content="Results" HorizontalAlignment="Right" Margin="0,0,38,0"
                         Foreground="White"
                         Background="Black"
                         Height="35"
                         Width="100" 
                            Click="Button_Click"></Button>
                </Grid>
                <Grid Grid.Row="1">
                    <ListView SelectedItem="{Binding Selectedstudent}" ItemsSource="{Binding Students}" Foreground="White">
                        <ListView.Background>
                            <SolidColorBrush Color="White" Opacity="0"/>
                        </ListView.Background>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Clear"/>
                            </ContextMenu>

                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Student Id" Width="80" DisplayMemberBinding="{Binding StudentId,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="First Name" Width="120" DisplayMemberBinding="{Binding FirstNamE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="Last Name" Width="120" DisplayMemberBinding="{Binding LastNamE,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="DOB" Width="160" DisplayMemberBinding="{Binding DOB,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                <GridViewColumn Header="Email"  DisplayMemberBinding="{Binding EmaiL,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Grid/>
                </Grid>
                <Grid Grid.Row="2">

                    <Border CornerRadius="25" Margin="10,30,10,30">

                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.2"/>
                        </Border.Background>

                    </Border>

                    <Button Content="Add Sudent" 
                        Foreground="White" Style="{DynamicResource RadiusButton}"
                        Background="Black"
                        Height="35"
                        Width="100" Margin="-342,0,0,0" Command="{Binding AddStudentCommand}">
                    </Button>
                    <Button Content="Update"  Style="{DynamicResource RadiusButton}"
                        Foreground="White"
                        Background="Black"
                        Height="35"
                        Width="100" Command="{Binding UpdateStudentCommand}"/>

                    <Button Content="Delete"  Style="{DynamicResource RadiusButton}"
                         Foreground="White"
                         Background="Black"
                         Height="35"
                         Width="100" Margin="342,0,0,0"
                            Command="{Binding RemoveStudentCommand}"></Button>
                </Grid>
            </Grid>

        </Grid>
    </Grid>
</Window>
