<Window x:Class="StudentManagementSystem.Views.ResultsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StudentManagementSystem.Views"
        xmlns:vm="clr-namespace:StudentManagementSystem.ViewModels"
        mc:Ignorable="d"
        Title="ResultsWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RADUSBUTTON" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:ResultWindowVM/>
    </Window.DataContext>
    <Window.Background>
        <ImageBrush ImageSource="/Images/background.jpg"/>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Border CornerRadius="10" Margin="150,5,150,5">

                <Border.Background>
                    <SolidColorBrush Color="White" Opacity="0.2"/>
                </Border.Background>

            </Border>
            <TextBlock Text="RESULTS" Foreground="White" FontSize="25" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock.Background>
                    <SolidColorBrush Color="Black" Opacity="0"/>
                </TextBlock.Background></TextBlock>

        </Grid>
        <Grid Grid.Row="1">
            <StackPanel>
                <StackPanel.Background>
                    <SolidColorBrush Color="#FFFDFCFC" Opacity="0"/>
                </StackPanel.Background>
                <ListView x:Name="ResultsList" SelectedItem="{Binding Selectedresult}" ItemsSource="{Binding Results}" Margin="5,20,5,0" Height=" 250 " VerticalAlignment="Top" Background="{x:Null}" Foreground="#FF828790">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header=" clear" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Id" Width="85" DisplayMemberBinding="{Binding Id, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                            <GridViewColumn Header="EE3305" Width="85" DisplayMemberBinding="{Binding EE3305, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>
                            <GridViewColumn Header="EE3302" Width="85" DisplayMemberBinding="{Binding EE3302, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>
                            <GridViewColumn Header="EE3301" Width="85" DisplayMemberBinding="{Binding EE3301, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>
                            <GridViewColumn Header="IS3307" Width="85" DisplayMemberBinding="{Binding IS3307, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>
                            <GridViewColumn Header="EE3250" Width="85" DisplayMemberBinding="{Binding EE3250, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>
                            <GridViewColumn Header="IS3302" Width="85" DisplayMemberBinding="{Binding IS3302, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>
                            <GridViewColumn Header="EE3203" Width="85" DisplayMemberBinding="{Binding EE3203, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}" />
                            <GridViewColumn Header="EE3251" Width="85" DisplayMemberBinding="{Binding EE3251, UpdateSourceTrigger=PropertyChanged ,Mode=TwoWay}"/>


                        </GridView>
                    </ListView.View>
                </ListView>
            </StackPanel>
            <StackPanel Width="790">

                
               
            </StackPanel>

           
            <Button Style="{DynamicResource RADUSBUTTON}"  
             Content="Add Result" FontSize="17"
             Foreground="White"
             Margin="-380,260,-380,25"
             Height="33"
             Width="200"
                Command="{Binding AddResultCommand}"         
             >
                
                <Button.Background>
                    <SolidColorBrush Color="Black" Opacity="0.4"/>
                </Button.Background>
            </Button>
        </Grid>

    </Grid>
</Window>
